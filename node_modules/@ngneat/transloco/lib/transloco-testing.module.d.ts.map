{"version":3,"file":"transloco-testing.module.d.ts","sources":["transloco-testing.module.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,sDAAsD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAsDjD;AACL;AACA;;;;AACA","sourcesContent":["import { InjectionToken, ModuleWithProviders } from '@angular/core';\r\nimport { TranslocoLoader } from './transloco.loader';\r\nimport { HashMap, Translation } from './types';\r\nimport { Observable } from 'rxjs';\r\nimport { TranslocoConfig } from './transloco.config';\r\nimport { TranslocoService } from './transloco.service';\r\nexport interface TranslocoTestingOptions {\r\n    translocoConfig?: Partial<TranslocoConfig>;\r\n    preloadLangs?: boolean;\r\n    langs?: HashMap<Translation>;\r\n}\r\nexport declare class TestingLoader implements TranslocoLoader {\r\n    private langs;\r\n    constructor(langs: HashMap<Translation>);\r\n    getTranslation(lang: string): Observable<Translation> | Promise<Translation>;\r\n}\r\nexport declare function initTranslocoService(service: TranslocoService, langs: HashMap<Translation>, options: TranslocoTestingOptions): () => Promise<void> | Promise<HashMap<any>[]>;\r\nexport declare class TranslocoTestingModule {\r\n    static forRoot(options: TranslocoTestingOptions): {\r\n        ngModule: typeof TranslocoTestingModule;\r\n        providers: (({\r\n            provide: InjectionToken<{}>;\r\n            useClass: typeof import(\"./transloco.transpiler\").DefaultTranspiler;\r\n            deps: InjectionToken<{}>[];\r\n        } | {\r\n            provide: InjectionToken<{}>;\r\n            useClass: typeof import(\"./transloco-missing-handler\").DefaultHandler;\r\n            deps?: undefined;\r\n        } | {\r\n            provide: InjectionToken<{}>;\r\n            useClass: typeof import(\"./transloco.interceptor\").DefaultInterceptor;\r\n            deps?: undefined;\r\n        } | {\r\n            provide: InjectionToken<import(\"./transloco-fallback-strategy\").TranslocoFallbackStrategy>;\r\n            useClass: typeof import(\"./transloco-fallback-strategy\").DefaultFallbackStrategy;\r\n            deps: InjectionToken<{}>[];\r\n        })[] | {\r\n            provide: InjectionToken<HashMap<HashMap<any>>>;\r\n            useValue: HashMap<HashMap<any>>;\r\n            useFactory?: undefined;\r\n            deps?: undefined;\r\n            multi?: undefined;\r\n            useClass?: undefined;\r\n        } | {\r\n            provide: InjectionToken<TranslocoTestingOptions>;\r\n            useValue: TranslocoTestingOptions;\r\n            useFactory?: undefined;\r\n            deps?: undefined;\r\n            multi?: undefined;\r\n            useClass?: undefined;\r\n        } | {\r\n            provide: InjectionToken<(() => void)[]>;\r\n            useFactory: typeof initTranslocoService;\r\n            deps: (typeof TranslocoService | InjectionToken<HashMap<HashMap<any>>>)[];\r\n            multi: boolean;\r\n            useValue?: undefined;\r\n            useClass?: undefined;\r\n        } | {\r\n            provide: InjectionToken<HashMap<any>>;\r\n            useClass: typeof TestingLoader;\r\n            useValue?: undefined;\r\n            useFactory?: undefined;\r\n            deps?: undefined;\r\n            multi?: undefined;\r\n        } | {\r\n            provide: InjectionToken<{}>;\r\n            useValue: TranslocoConfig;\r\n            useFactory?: undefined;\r\n            deps?: undefined;\r\n            multi?: undefined;\r\n            useClass?: undefined;\r\n        })[];\r\n    };\r\n    /** @deprecated - use forRoot instead */\r\n    static withLangs(langs: HashMap<Translation>, config?: Partial<TranslocoConfig>, options?: TranslocoTestingOptions): ModuleWithProviders<TranslocoTestingModule>;\r\n}\r\n"]}