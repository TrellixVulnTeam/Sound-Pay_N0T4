{"version":3,"file":"chart.component.d.ts","sources":["chart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, OnInit, OnDestroy, SimpleChanges } from \"@angular/core\";\r\nimport { ApexAnnotations, ApexAxisChartSeries, ApexChart, ApexDataLabels, ApexFill, ApexGrid, ApexLegend, ApexNonAxisChartSeries, ApexMarkers, ApexNoData, ApexPlotOptions, ApexResponsive, ApexStates, ApexStroke, ApexTheme, ApexTitleSubtitle, ApexTooltip, ApexXAxis, ApexYAxis } from \"../model/apex-types\";\r\nexport declare class ChartComponent implements OnInit, OnChanges, OnDestroy {\r\n    chart: ApexChart;\r\n    annotations: ApexAnnotations;\r\n    colors: any[];\r\n    dataLabels: ApexDataLabels;\r\n    series: ApexAxisChartSeries | ApexNonAxisChartSeries;\r\n    stroke: ApexStroke;\r\n    labels: string[];\r\n    legend: ApexLegend;\r\n    markers: ApexMarkers;\r\n    noData: ApexNoData;\r\n    fill: ApexFill;\r\n    tooltip: ApexTooltip;\r\n    plotOptions: ApexPlotOptions;\r\n    responsive: ApexResponsive[];\r\n    xaxis: ApexXAxis;\r\n    yaxis: ApexYAxis | ApexYAxis[];\r\n    grid: ApexGrid;\r\n    states: ApexStates;\r\n    title: ApexTitleSubtitle;\r\n    subtitle: ApexTitleSubtitle;\r\n    theme: ApexTheme;\r\n    autoUpdateSeries: boolean;\r\n    private chartElement;\r\n    private chartObj;\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    private createElement;\r\n    render(): Promise<void>;\r\n    updateOptions(options: any, redrawPaths?: boolean, animate?: boolean, updateSyncedCharts?: boolean): Promise<void>;\r\n    updateSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate?: boolean): void;\r\n    appendSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate?: boolean): void;\r\n    appendData(newData: any[]): void;\r\n    toggleSeries(seriesName: string): any;\r\n    showSeries(seriesName: string): void;\r\n    hideSeries(seriesName: string): void;\r\n    resetSeries(): void;\r\n    zoomX(min: number, max: number): void;\r\n    toggleDataPointSelection(seriesIndex: number, dataPointIndex?: number): void;\r\n    destroy(): void;\r\n    setLocale(localeName?: string): void;\r\n    paper(): void;\r\n    addXaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\r\n    addYaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\r\n    addPointAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\r\n    removeAnnotation(id: string, options?: any): void;\r\n    clearAnnotations(options?: any): void;\r\n    dataURI(): Promise<void>;\r\n}\r\n"]}