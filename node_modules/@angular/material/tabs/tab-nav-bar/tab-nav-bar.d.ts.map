<<<<<<< HEAD
{"version":3,"file":"tab-nav-bar.d.ts","sources":["tab-nav-bar.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusableOption, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { AfterContentChecked, AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, QueryList } from '@angular/core';\nimport { CanDisable, CanDisableRipple, HasTabIndex, RippleConfig, RippleGlobalOptions, RippleTarget, ThemePalette } from '@angular/material/core';\nimport { MatInkBar } from '../ink-bar';\nimport { MatPaginatedTabHeader, MatPaginatedTabHeaderItem } from '../paginated-tab-header';\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nexport declare abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** Query list of all tab links of the tab navigation. */\n    abstract _items: QueryList<MatPaginatedTabHeaderItem & {\n        active: boolean;\n    }>;\n    /** Background color of the tab nav. */\n    get backgroundColor(): ThemePalette;\n    set backgroundColor(value: ThemePalette);\n    private _backgroundColor;\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple(): any;\n    set disableRipple(value: any);\n    private _disableRipple;\n    /** Theme color of the nav bar. */\n    color: ThemePalette;\n    constructor(elementRef: ElementRef, dir: Directionality, ngZone: NgZone, changeDetectorRef: ChangeDetectorRef, viewportRuler: ViewportRuler, platform: Platform, animationMode?: string);\n    protected _itemSelected(): void;\n    ngAfterContentInit(): void;\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink(): void;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nexport declare class MatTabNav extends _MatTabNavBase {\n    _items: QueryList<MatTabLink>;\n    _inkBar: MatInkBar;\n    _tabListContainer: ElementRef;\n    _tabList: ElementRef;\n    _nextPaginator: ElementRef<HTMLElement>;\n    _previousPaginator: ElementRef<HTMLElement>;\n    constructor(elementRef: ElementRef, dir: Directionality, ngZone: NgZone, changeDetectorRef: ChangeDetectorRef, viewportRuler: ViewportRuler, platform: Platform, animationMode?: string);\n    static ngAcceptInputType_disableRipple: BooleanInput;\n}\ndeclare const _MatTabLinkMixinBase: import(\"@angular/material/core/common-behaviors/constructor\").Constructor<HasTabIndex> & import(\"@angular/material/core/common-behaviors/constructor\").AbstractConstructor<HasTabIndex> & import(\"@angular/material/core/common-behaviors/constructor\").Constructor<CanDisableRipple> & import(\"@angular/material/core/common-behaviors/constructor\").AbstractConstructor<CanDisableRipple> & import(\"@angular/material/core/common-behaviors/constructor\").Constructor<CanDisable> & import(\"@angular/material/core/common-behaviors/constructor\").AbstractConstructor<CanDisable> & {\n    new (): {};\n};\n/** Base class with all of the `MatTabLink` functionality. */\nexport declare class _MatTabLinkBase extends _MatTabLinkMixinBase implements AfterViewInit, OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\n    private _tabNavBar;\n    /** @docs-private */ elementRef: ElementRef;\n    private _focusMonitor;\n    /** Whether the tab link is active or not. */\n    protected _isActive: boolean;\n    /** Whether the link is active. */\n    get active(): boolean;\n    set active(value: boolean);\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * @docs-private\n     */\n    rippleConfig: RippleConfig & RippleGlobalOptions;\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled(): boolean;\n    constructor(_tabNavBar: _MatTabNavBase, \n    /** @docs-private */ elementRef: ElementRef, globalRippleOptions: RippleGlobalOptions | null, tabIndex: string, _focusMonitor: FocusMonitor, animationMode?: string);\n    /** Focuses the tab link. */\n    focus(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    _handleFocus(): void;\n    static ngAcceptInputType_active: BooleanInput;\n    static ngAcceptInputType_disabled: BooleanInput;\n    static ngAcceptInputType_disableRipple: BooleanInput;\n    static ngAcceptInputType_tabIndex: NumberInput;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nexport declare class MatTabLink extends _MatTabLinkBase implements OnDestroy {\n    /** Reference to the RippleRenderer for the tab-link. */\n    private _tabLinkRipple;\n    constructor(tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone, platform: Platform, globalRippleOptions: RippleGlobalOptions | null, tabIndex: string, focusMonitor: FocusMonitor, animationMode?: string);\n    ngOnDestroy(): void;\n}\nexport {};\n"]}
=======
{"version":3,"file":"tab-nav-bar.d.ts","sources":["tab-nav-bar.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { FocusableOption, FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { ViewportRuler } from '@angular/cdk/scrolling';\r\nimport { AfterContentChecked, AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, QueryList } from '@angular/core';\r\nimport { CanDisable, CanDisableRipple, HasTabIndex, RippleConfig, RippleGlobalOptions, RippleTarget, ThemePalette } from '@angular/material/core';\r\nimport { MatInkBar } from '../ink-bar';\r\nimport { MatPaginatedTabHeader, MatPaginatedTabHeaderItem } from '../paginated-tab-header';\r\n/**\r\n * Base class with all of the `MatTabNav` functionality.\r\n * @docs-private\r\n */\r\nexport declare abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit, OnDestroy {\r\n    /** Query list of all tab links of the tab navigation. */\r\n    abstract _items: QueryList<MatPaginatedTabHeaderItem & {\r\n        active: boolean;\r\n    }>;\r\n    /** Background color of the tab nav. */\r\n    get backgroundColor(): ThemePalette;\r\n    set backgroundColor(value: ThemePalette);\r\n    private _backgroundColor;\r\n    /** Whether the ripple effect is disabled or not. */\r\n    get disableRipple(): any;\r\n    set disableRipple(value: any);\r\n    private _disableRipple;\r\n    /** Theme color of the nav bar. */\r\n    color: ThemePalette;\r\n    constructor(elementRef: ElementRef, dir: Directionality, ngZone: NgZone, changeDetectorRef: ChangeDetectorRef, viewportRuler: ViewportRuler, platform: Platform, animationMode?: string);\r\n    protected _itemSelected(): void;\r\n    ngAfterContentInit(): void;\r\n    /** Notifies the component that the active link has been changed. */\r\n    updateActiveLink(): void;\r\n}\r\n/**\r\n * Navigation component matching the styles of the tab group header.\r\n * Provides anchored navigation with animated ink bar.\r\n */\r\nexport declare class MatTabNav extends _MatTabNavBase {\r\n    _items: QueryList<MatTabLink>;\r\n    _inkBar: MatInkBar;\r\n    _tabListContainer: ElementRef;\r\n    _tabList: ElementRef;\r\n    _nextPaginator: ElementRef<HTMLElement>;\r\n    _previousPaginator: ElementRef<HTMLElement>;\r\n    constructor(elementRef: ElementRef, dir: Directionality, ngZone: NgZone, changeDetectorRef: ChangeDetectorRef, viewportRuler: ViewportRuler, platform: Platform, animationMode?: string);\r\n    static ngAcceptInputType_disableRipple: BooleanInput;\r\n}\r\ndeclare const _MatTabLinkMixinBase: import(\"@angular/material/core/common-behaviors/constructor\").Constructor<HasTabIndex> & import(\"@angular/material/core/common-behaviors/constructor\").AbstractConstructor<HasTabIndex> & import(\"@angular/material/core/common-behaviors/constructor\").Constructor<CanDisableRipple> & import(\"@angular/material/core/common-behaviors/constructor\").AbstractConstructor<CanDisableRipple> & import(\"@angular/material/core/common-behaviors/constructor\").Constructor<CanDisable> & import(\"@angular/material/core/common-behaviors/constructor\").AbstractConstructor<CanDisable> & {\r\n    new (): {};\r\n};\r\n/** Base class with all of the `MatTabLink` functionality. */\r\nexport declare class _MatTabLinkBase extends _MatTabLinkMixinBase implements AfterViewInit, OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\r\n    private _tabNavBar;\r\n    /** @docs-private */ elementRef: ElementRef;\r\n    private _focusMonitor;\r\n    /** Whether the tab link is active or not. */\r\n    protected _isActive: boolean;\r\n    /** Whether the link is active. */\r\n    get active(): boolean;\r\n    set active(value: boolean);\r\n    /**\r\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\r\n     * is set to the global ripple options since we don't have any configurable options for\r\n     * the tab link ripples.\r\n     * @docs-private\r\n     */\r\n    rippleConfig: RippleConfig & RippleGlobalOptions;\r\n    /**\r\n     * Whether ripples are disabled on interaction.\r\n     * @docs-private\r\n     */\r\n    get rippleDisabled(): boolean;\r\n    constructor(_tabNavBar: _MatTabNavBase, \r\n    /** @docs-private */ elementRef: ElementRef, globalRippleOptions: RippleGlobalOptions | null, tabIndex: string, _focusMonitor: FocusMonitor, animationMode?: string);\r\n    /** Focuses the tab link. */\r\n    focus(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    _handleFocus(): void;\r\n    static ngAcceptInputType_active: BooleanInput;\r\n    static ngAcceptInputType_disabled: BooleanInput;\r\n    static ngAcceptInputType_disableRipple: BooleanInput;\r\n    static ngAcceptInputType_tabIndex: NumberInput;\r\n}\r\n/**\r\n * Link inside of a `mat-tab-nav-bar`.\r\n */\r\nexport declare class MatTabLink extends _MatTabLinkBase implements OnDestroy {\r\n    /** Reference to the RippleRenderer for the tab-link. */\r\n    private _tabLinkRipple;\r\n    constructor(tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone, platform: Platform, globalRippleOptions: RippleGlobalOptions | null, tabIndex: string, focusMonitor: FocusMonitor, animationMode?: string);\r\n    ngOnDestroy(): void;\r\n}\r\nexport {};\r\n"]}
>>>>>>> ea61c1251ad92ce8100055fde2f2ab58372d18d8
