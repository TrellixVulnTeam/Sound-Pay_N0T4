<<<<<<< HEAD
{"version":3,"file":"drag-handle.d.ts","sources":["drag-handle.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { ElementRef, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport declare const CDK_DRAG_HANDLE: InjectionToken<CdkDragHandle>;\n/** Handle that can be used to drag a CdkDrag instance. */\nexport declare class CdkDragHandle implements OnDestroy {\n    element: ElementRef<HTMLElement>;\n    /** Closest parent draggable instance. */\n    _parentDrag: {} | undefined;\n    /** Emits when the state of the handle has changed. */\n    readonly _stateChanges: Subject<CdkDragHandle>;\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled(): boolean;\n    set disabled(value: boolean);\n    private _disabled;\n    constructor(element: ElementRef<HTMLElement>, parentDrag?: any);\n    ngOnDestroy(): void;\n    static ngAcceptInputType_disabled: BooleanInput;\n}\n"]}
=======
{"version":3,"file":"drag-handle.d.ts","sources":["drag-handle.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { ElementRef, InjectionToken, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n/**\r\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\r\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport declare const CDK_DRAG_HANDLE: InjectionToken<CdkDragHandle>;\r\n/** Handle that can be used to drag a CdkDrag instance. */\r\nexport declare class CdkDragHandle implements OnDestroy {\r\n    element: ElementRef<HTMLElement>;\r\n    /** Closest parent draggable instance. */\r\n    _parentDrag: {} | undefined;\r\n    /** Emits when the state of the handle has changed. */\r\n    readonly _stateChanges: Subject<CdkDragHandle>;\r\n    /** Whether starting to drag through this handle is disabled. */\r\n    get disabled(): boolean;\r\n    set disabled(value: boolean);\r\n    private _disabled;\r\n    constructor(element: ElementRef<HTMLElement>, parentDrag?: any);\r\n    ngOnDestroy(): void;\r\n    static ngAcceptInputType_disabled: BooleanInput;\r\n}\r\n"]}
>>>>>>> ea61c1251ad92ce8100055fde2f2ab58372d18d8
