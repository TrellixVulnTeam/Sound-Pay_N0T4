<<<<<<< HEAD
{"version":3,"file":"drop-list-group.d.ts","sources":["drop-list-group.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { OnDestroy, InjectionToken } from '@angular/core';\nimport { BooleanInput } from '@angular/cdk/coercion';\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport declare const CDK_DROP_LIST_GROUP: InjectionToken<CdkDropListGroup<unknown>>;\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nexport declare class CdkDropListGroup<T> implements OnDestroy {\n    /** Drop lists registered inside the group. */\n    readonly _items: Set<T>;\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled(): boolean;\n    set disabled(value: boolean);\n    private _disabled;\n    ngOnDestroy(): void;\n    static ngAcceptInputType_disabled: BooleanInput;\n}\n"]}
=======
{"version":3,"file":"drop-list-group.d.ts","sources":["drop-list-group.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { OnDestroy, InjectionToken } from '@angular/core';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\n/**\r\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\r\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport declare const CDK_DROP_LIST_GROUP: InjectionToken<CdkDropListGroup<unknown>>;\r\n/**\r\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\r\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\r\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\r\n * from `cdkDropList`.\r\n */\r\nexport declare class CdkDropListGroup<T> implements OnDestroy {\r\n    /** Drop lists registered inside the group. */\r\n    readonly _items: Set<T>;\r\n    /** Whether starting a dragging sequence from inside this group is disabled. */\r\n    get disabled(): boolean;\r\n    set disabled(value: boolean);\r\n    private _disabled;\r\n    ngOnDestroy(): void;\r\n    static ngAcceptInputType_disabled: BooleanInput;\r\n}\r\n"]}
>>>>>>> ea61c1251ad92ce8100055fde2f2ab58372d18d8
